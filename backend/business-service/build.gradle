buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// querydsl 추가
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'java'
	// sonarqube
	id 'org.sonarqube' version '3.0'
}

group = 'com.footprints'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

	// 파일 업로드 의존성 주입
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'

    // aws 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// 썸네일 라이브러리 추가
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.18'

	// querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	// WebSocket 추가
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// sockjs 추가
	implementation 'org.webjars:sockjs-client:1.5.1'

	// stomp
	implementation 'org.webjars:stomp-websocket:2.3.4'

	// gson
	implementation 'com.google.code.gson:gson:2.9.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'jakarta.validation:jakarta.validation-api'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.3.RELEASE'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'

	implementation 'org.apache.httpcomponents:httpcore:4.4.15'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
// querydsl 추가 끝

subprojects {
	apply plugin: 'org.sonarqube'

	sonarqube {
		properties {
			property 'sonar.host.url', 'http://localhost:9000'
			property 'sonar.login', 'squ_b53aa1544c2691823bf14a826e7c8759ec0a9e32'
			property 'sonar.sources', 'src'
			property 'sonar.language', 'java'
			property 'sonar.projectVersion', '1.1.0-SNAPSHOT'
			property 'sonar.sourceEncoding', 'UTF-8'
			property 'sonar.coverage.jacoco.xmlReportPaths', '${buildDir}/reports/jacoco/test/jacocoTestReport.xml'
			property 'sonar.java.binaries', '${buildDir}/classes'
			property 'sonar.test.inclusions', '**/*Test.java'
			property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/**'
		}
	}
}